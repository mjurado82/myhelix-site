name: Publisher - Notifier

on: 
  repository_dispatch:
    types:
      - resource-published
jobs:
  check-event-status:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Status: ${{ github.event.client_payload.status }}"
        echo "Path: ${{ github.event.client_payload.path }}"
  notify-connector:
    if: (github.event.client_payload.status == 200 || github.event.client_payload.status == 204)
    runs-on: ubuntu-latest
    environment: main
    steps:
    - name: Notify backend endpoint
      run: |
        sleep 1s
        PAGE_PATH=$(echo "${{ github.event.client_payload.path }}" | sed 's/\.md$//g')
        WEBSITE_NAME="${{ vars.WEBSITE_NAME }}"
        URI=$(echo "${{ vars.CONNECTOR_DOMAIN }}/$WEBSITE_NAME")
        BODY='{ "paths": [ "'$PAGE_PATH'" ] }'
        BODY="$(echo "$BODY" | jq -c)"
        response=$(curl 'https://apitest.newsan.com.ar/api/products/stock/ebs/reserve?sku=9132LM620PI' -H 'auth-key: 028450faa154a7df0a69f15387b8a4f5')
        echo "response: $BODY"
        echo "auth_key: ${{ secrets.AUTH_KEY }}"
        echo "cme_endpoint: ${{ vars.CME_ENDPOINT }}"
    - name: Mostrar actor y evento
      run: |
        echo "Actor: ${{ github.actor }}"
        echo "Trigger: ${{ github.event_name }}"
        echo "Token: ${{ github.token }}"
        echo "Is App? ${{ github.actor == 'github-app[bot]' }}"
    - name: Mostrar todas las variables
      run: env | sort

    - name: Mostrar variable desde vars
      run: echo "vars.CME_ENDPOINT = ${{ vars.CME_ENDPOINT }}"

    - name: Usar variable en shell
      env:
        MI_VAR: ${{ vars.CME_ENDPOINT }}
      run: echo "Valor de MI_VAR = $MI_VAR"
      shell: bash
